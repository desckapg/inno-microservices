name: build-test-analyze

on:
  pull_request:
    branches: [ '**' ]
  push:
    branches: [ '**' ]

env:
  JAVA_VERSION: '21'
  GRADLE_VERSION: '8.14.3'
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}


jobs:
  detect-changes:
    name: Detect Changes
    if: ${{ !github.event.act }}
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.changes.outputs.matrix }}
      has-changes: ${{ steps.changes.outputs.has-changes }}
    steps:
      - name: Checkout code
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
        with:
          fetch-depth: 0

      - name: Detect changed services
        id: changes
        run: |
          SERVICES_RAW=$(grep -E "include\(|project\(" settings.gradle.kts | sed -E 's/.*["\x27:]([^"\x27]+)["\x27].*/\1/g' | sed 's/^://g')
          
          readarray -t SERVICES_ARRAY <<< "$SERVICES_RAW"
          
          echo "All services found:"
          printf '%s\n' "${SERVICES_ARRAY[@]}"
          
          if [ "${{ github.event_name }}" == "push" ] && [ "${{ github.ref }}" == "refs/heads/main" ]; then
            CHANGED_SERVICES=("${SERVICES_ARRAY[@]}")
          else
            if [ "${{ github.event_name }}" == "pull_request" ]; then
              BASE_SHA=${{ github.event.pull_request.base.sha }}
              HEAD_SHA=${{ github.event.pull_request.head.sha }}
            else
              BASE_SHA=${{ github.event.before }}
              HEAD_SHA=${{ github.sha }}
            fi
          
            CHANGED_FILES=$(git diff --name-only $BASE_SHA..$HEAD_SHA || git diff --name-only HEAD~1)
            CHANGED_SERVICES=()
          
            for service in "${SERVICES_ARRAY[@]}"; do
              if [ -n "$service" ] && echo "$CHANGED_FILES" | grep -q "^$service/"; then
                CHANGED_SERVICES+=("$service")
              fi
            done
          
            if echo "$CHANGED_FILES" | grep -qE "(build\.gradle\.kts|settings\.gradle\.kts|gradle\.properties|\.github/workflows/|buildSrc/)"; then
              CHANGED_SERVICES=("${SERVICES_ARRAY[@]}")
            fi
          fi
        
          if [ ${#CHANGED_SERVICES[@]} -gt 0 ]; then
            MATRIX_JSON=$(printf '%s\n' "${CHANGED_SERVICES[@]}" | jq -R . | jq -s . | jq -c .)
            echo "matrix={\"service\":$MATRIX_JSON}" >> $GITHUB_OUTPUT
            echo "has-changes=true" >> $GITHUB_OUTPUT
            echo "Changed services: ${CHANGED_SERVICES[*]}"
          else
            echo "matrix={\"service\":[]}" >> $GITHUB_OUTPUT
            echo "has-changes=false" >> $GITHUB_OUTPUT
            echo "No service changes detected"
          fi

  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.has-changes == 'true'
    strategy:
      matrix: ${{ fromJson(needs.detect-changes.outputs.matrix) }}
      fail-fast: false
    outputs:
      version: ${{ steps.version.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493

      - name: Set up JDK 21
        uses: actions/setup-java@ead9eaa3cfe0b0fc2fa749519ae09c3d4f4080b0
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@748248ddd2a24f49513d8f472f81c3a07d4d50e1
        with:
          gradle-version: ${{ env.GRADLE_VERSION }}
          build-scan-publish: true
          build-scan-terms-of-use-url: "https://gradle.com/terms-of-service"
          build-scan-terms-of-use-agree: "yes"

      - name: Build service
        run: gradle :${{ matrix.service }}:build -x test

      - name: Run unit tests
        run: gradle :${{ matrix.service }}:test
        env:
          TESTCONTAINERS_RYUK_DISABLED: false

      - name: Generate version
        id: version
        run: echo "version=$(date +'%Y%m%d')-${GITHUB_SHA::8}" >> $GITHUB_OUTPUT

      - name: Generate test report
        uses: dorny/test-reporter@34d8269ede7e3fdd0eb2af49b8b42e9288d49032
        if: success() || failure()
        with:
          name: ${{ matrix.service }} Tests
          path: |
            ${{ matrix.service }}/build/test-results/test/*.xml
          reporter: java-junit

      - name: Upload build artifacts
        uses: actions/upload-artifact@2848b2cda0e5190984587ec6bb1f36730ca78d50
        with:
          name: ${{ matrix.service }}-build-artifacts
          path: |
            ${{ matrix.service }}/build/libs/*.jar
            ${{ matrix.service }}/build/classes/
          retention-days: 7

      - name: Upload test results
        uses: actions/upload-artifact@2848b2cda0e5190984587ec6bb1f36730ca78d50
        if: always()
        with:
          name: ${{ matrix.service }}-test-results
          path: |
            ${{ matrix.service }}/build/test-results/
            ${{ matrix.service }}/build/reports/tests/
          retention-days: 7

  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: [ detect-changes, build-and-test ]
    if: needs.detect-changes.outputs.has-changes == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@ff7abcd0c3c05ccf6adc123a8cd1fd4fb30fb493
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@ead9eaa3cfe0b0fc2fa749519ae09c3d4f4080b0
        with:
          java-version: ${{ env.JAVA_VERSION }}
          distribution: 'temurin'

      - name: Download all build artifacts
        uses: actions/download-artifact@4a24838f3d5601fd639834081e118c2995d51e1c
        with:
          pattern: "*-build-artifacts"
          path: .
          merge-multiple: true

      - name: Download all test results
        uses: actions/download-artifact@4a24838f3d5601fd639834081e118c2995d51e1c
        with:
          pattern: "*-build-artifacts"
          path: .
          merge-multiple: true

      - name: Analyze
        run: gradle :sonar --info
